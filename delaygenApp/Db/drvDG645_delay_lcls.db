## Delay channel $(CHAN) related PVs

record(mbbi,"$(P)$(R)$(CHAN)Ref")
{
    field(PINI, "YES")
    field(DESC, "Chan $(CHAN) Ref")
    field(SCAN, "Passive")
    field(ZRST, "T0")
    field(ONST, "A")
    field(TWST, "B")
    field(THST, "C")
    field(FRST, "D")
    field(FVST, "E")
    field(SXST, "F")
    field(SVST, "G")
    field(EIST, "H")
    field(ZRVL, "0")
    field(ONVL, "2")
    field(TWVL, "3")
    field(THVL, "4")
    field(FRVL, "5")
    field(FVVL, "6")
    field(SXVL, "7")
    field(SVVL, "8")
    field(EIVL, "9")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT)) $(CHAN)_REF")
}
record(mbbo,"$(P)$(R)$(CHAN)RefSet")
{
    field(DESC, "Chan $(CHAN) Ref")
    field(SCAN, "Passive")
    field(ZRST, "T0")
    field(ONST, "A")
    field(TWST, "B")
    field(THST, "C")
    field(FRST, "D")
    field(FVST, "E")
    field(SXST, "F")
    field(SVST, "G")
    field(EIST, "H")
    field(ZRVL, "0")
    field(ONVL, "2")
    field(TWVL, "3")
    field(THVL, "4")
    field(FRVL, "5")
    field(FVVL, "6")
    field(SXVL, "7")
    field(SVVL, "8")
    field(EIVL, "9")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT)) $(CHAN)_REF")
    field(FLNK, "$(P)$(R)$(CHAN)RefFO")
}
record(fanout,"$(P)$(R)$(CHAN)RefFO")
{
    field(LNK1, "$(P)$(R)$(CHAN)Ref")
    field(LNK2, "$(P)$(R)$(CHAN)Delay")
}
record(ai,"$(P)$(R)$(CHAN)Delay")
{
    field(PINI, "YES")
    field(DESC, "Chan $(CHAN) Delay")
    field(SCAN, "$(SCAN=1 second)")
    field(PREC, "12")
    field(EGU,  "Sec")
    field(HIGH, "$(='$(HIGH=""))")
    field(LOW,  "$(='$(LOW=""))")
    field(HSV,  "$(='$(HSV=NO_ALARM))")
    field(LSV,  "$(='$(LSV=NO_ALARM))")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT)) $(CHAN)_DELAY")
    info(autosaveFields, "VAL DESC HIGH LOW HSV LSV")
}
record(seq,"$(P)$(R)$(CHAN)DelaySeq")
{
    field(DOL1, "1")
    field(LNK1, "$(P)$(R)$(CHAN)DelayWriteSet.DISA")
    field(DOL2, "$(P)$(R)$(CHAN)Delay")
    field(LNK2, "$(P)$(R)$(CHAN)DelaySet PP")
    field(DOL3, "0")
    field(LNK3, "$(P)$(R)$(CHAN)DelayWriteSet.DISA")
}

# The FLNK macro is for specifying a PV to calculate limits for Delay.
# You may leave it blank and set hard limits (Delay.HIGH, Delay.LOW).
record(ao,"$(P)$(R)$(CHAN)DelaySet")
{
    field(DESC, "Chan $(CHAN) Delay")
    field(PREC, "12")
    field(EGU,  "Sec")
    field(OUT,  "$(P)$(R)$(CHAN)DelayWriteSet PP")
    field(FLNK, "$(P)$(R)$(CHAN)$(='$(FLNK=""))")
    info(autosaveFields, "VAL")
}
record(ao,"$(P)$(R)$(CHAN)DelayWriteSet")
{
    field(DESC, "Chan $(CHAN) Delay Writer")
    field(DISV, "1")
    field(PREC, "12")
    field(EGU,  "Sec")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT)) $(CHAN)_DELAY")
}
record(ai,"$(P)$(R)$(CHAN)DelayStep")
{
    field(PINI, "YES")
    field(DESC, "Chan $(CHAN) Delay Tweak")
    field(PREC, "12")
    field(EGU,  "Sec")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT)) $(CHAN)_DELAY_STEP")
}
record(ao,"$(P)$(R)$(CHAN)DelayStepSet")
{
    field(DESC, "Chan $(CHAN) Delay Tweak")
    field(PREC, "12")
    field(EGU,  "Sec")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT)) $(CHAN)_DELAY_STEP")
    field(FLNK, "$(P)$(R)$(CHAN)DelayStep")
    info(autosaveFields, "VAL")
}
record(bo,"$(P)$(R)$(CHAN)DelayInc")
{
    field(DESC, "Chan $(CHAN) Delay Tweak Inc")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT)) $(CHAN)_DELAY_STEP_POS")
    field(FLNK, "$(P)$(R)$(CHAN)DelayTweakSeq")
}
record(bo,"$(P)$(R)$(CHAN)DelayDec")
{
    field(DESC, "Chan $(CHAN) Delay Tweak Dec")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT)) $(CHAN)_DELAY_STEP_NEG")
    field(FLNK, "$(P)$(R)$(CHAN)DelayTweakSeq")
}
record(seq,"$(P)$(R)$(CHAN)DelayTweakSeq")
{
    field(DESC, "Chan $(CHAN) Delay Tweak Seq")
    field(DOL1, "0")    # NO_ALARM
    field(LNK1, "$(P)$(R)$(CHAN)Delay.HSV")
    field(DOL2, "0")    # NO_ALARM
    field(LNK2, "$(P)$(R)$(CHAN)Delay.LSV")
    field(DOL3, "0")    # Passive
    field(LNK3, "$(P)$(R)$(CHAN)Delay.SCAN")
    field(DOL4, "1")
    field(LNK4, "$(P)$(R)$(CHAN)Delay.PROC")
    field(DOL5, "$(P)$(R)$(CHAN)DelayScan")
    field(LNK5, "$(P)$(R)$(CHAN)Delay.SCAN")
    field(DLY6, "0.1")
    field(DOL6, "1")
    field(LNK6, "$(P)$(R)$(CHAN)DelaySeq.PROC")
    field(DOL7, "$(P)$(R)$(CHAN)DelayHsv")
    field(LNK7, "$(P)$(R)$(CHAN)Delay.HSV")
    field(DOL8, "$(P)$(R)$(CHAN)DelayLsv")
    field(LNK8, "$(P)$(R)$(CHAN)Delay.LSV")
}
record(ai,"$(P)$(R)$(CHAN)DelayHsv")
{
    field(DESC, "Chan $(CHAN) Delay High Sevr")
    field(PINI, "YES")
    field(INP,  "$(P)$(R)$(CHAN)Delay.HSV")
}
record(ai,"$(P)$(R)$(CHAN)DelayLsv")
{
    field(DESC, "Chan $(CHAN) Delay Low Sevr")
    field(PINI, "YES")
    field(INP,  "$(P)$(R)$(CHAN)Delay.LSV")
}
record(ai,"$(P)$(R)$(CHAN)DelayScan")
{
    field(DESC, "Chan $(CHAN) Delay Scan Rate")
    field(PINI, "YES")
    field(INP,  "$(P)$(R)$(CHAN)Delay.SCAN")
}

